
https://stackoverflow.com/questions/16106893/zf2-paginator-performance-with-fetchall-without-limit

Solution: Zend\Paginator\Adapter\DbSelect
http://zf2.readthedocs.io/en/release-2.1.4/modules/zend.paginator.usage.html#the-dbselect-adapter

class MyDbSelect extends Zend\Paginator\Adapter\DbSelect
{
    public function count()
    {
        $select = new Zend\Db\Sql\Select();
        $select->from('item_counts')->columns(array('c'=>'post_count'));

        $statement = $this->sql->prepareStatementForSqlObject($select);
        $result    = $statement->execute();
        $row       = $result->current();
        $this->rowCount = $row['c'];

        return $this->rowCount;
    }
}

$adapter = new MyDbSelect($query, $adapter);
$paginator = new Zend\Paginator\Paginator($adapter);

Use the Zend\Paginator\Adapter\DbSelect adapter instead, it does exactly what you're asking for, applying limit and offset to the query you give it to begin with, and just fetching those records.

Additionally this adapter does not fetch all records from the database in order to count them. Instead, the adapter manipulates the original query to produce a corresponding COUNT query. Paginator then executes that COUNT query to get the number of rows. This does require an extra round-trip to the database, but this is many times faster than fetching an entire result set and using count(), especially with large collections of data.
https://github.com/trongle/book_zend2
https://hotexamples.com/examples/-/Zend%255CPaginator%255CPaginator/-/php-zend%255cpaginator%255cpaginator-class-examples.html